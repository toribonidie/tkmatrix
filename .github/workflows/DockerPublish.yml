name: Build Images

on:
  push:
    branches:
      - main

jobs:
  discover:
    name: Discover Build Recipes
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.find_recipes.outputs.matrix }}

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Find buildable recipes
        id: find_recipes
        run: |
          # Find application directories containing a 'Dockerfile' file
          # Use a series of pipes to format the list directories as JSON without leading "./"
          dirs=$(find -name "Dockerfile" -exec dirname {} \; | cut -f2 -d/ | jq -R . | jq -s . | tr -d '\n')
          echo "Found directories: $dirs"
          echo "matrix={\"package_dir\":$dirs}" >> $GITHUB_OUTPUT

  build:
    name: Build Images
    runs-on: ubuntu-latest
    needs: discover

    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.discover.outputs.matrix) }}

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and publish image
        uses: docker/build-push-action@v4
        with:
          push: true
          context: "{{defaultContext}}:${{ matrix.package_dir }}"
          images: ghcr.io/${{ github.repository_owner }}/${{ github.repository }}
          tags: ${{ matrix.package_dir }}

  # Use this job for branch protection rules
  build-successful:
    name: Report Build Status
    runs-on: ubuntu-latest
    needs: [ discover, build ]
    if: always()
    steps:
      - name: Check build status
        if: ${{ contains(needs.*.result, 'failure') }}
        run: exit 1
