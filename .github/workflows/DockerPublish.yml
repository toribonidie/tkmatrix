name: Build Images

on:
  push:

jobs:
  discover:
    name: Discover Build Recipes
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.find_recipes.outputs.matrix }}

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Find buildable recipes
        id: find_recipes
        run: |
          # Find application directories containing a 'docker-compose.yml' file
          dirs=$(find . -name "docker-compose.yml" -exec dirname {} \; | jq -R . | jq -s . | tr -d '\n')
          echo "Found directories: $dirs"
          echo "matrix={\"package_dir\":dirs}" >> $GITHUB_OUTPUT

  build:
    name: Build Package
    runs-on: ubuntu-latest
    needs: discover

    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.discover.outputs.matrix) }}

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build compose file
        id: build_image
        working-directory: ${{ matrix.package_dir }}
        run: |
          REPO=ghcr.io/${{ github.repository_owner }}
          APP_NAME=$(echo ${{ matrix.package_dir }}/ | cut -f2 -d/)
          CONFIG_NAME=$(echo ${{ matrix.package_dir }}/ | cut -f3 -d/)

          # Create the image names
          if [ $CONFIG_NAME ]; 
          then
            LATEST_IMAGE=$REPO/$APP_NAME:$CONFIG_NAME-latest
            DATE_IMAGE=$REPO/$APP_NAME:$CONFIG_NAME-$(date +%Y%m%d)
          else
            LATEST_IMAGE=$REPO/$APP_NAME:latest
            DATE_IMAGE=$REPO/$APP_NAME:$(date +%Y%m%d)
          fi

          # Build the images
          IMAGE_NAME=$LATEST_IMAGE docker compose build
          IMAGE_NAME=$DATE_IMAGE   docker compose build
          
          # Export the image names for use downstream
          echo "LATEST_IMAGE=$LATEST_IMAGE" >> "$GITHUB_OUTPUT"
          echo "DATE_IMAGE=$DATE_IMAGE" >> "$GITHUB_OUTPUT"

      - name: Publish Images
        if: github.ref == 'refs/heads/main'
        run: |
          docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
          docker push ${{ steps.build_image.outputs.LATEST_IMAGE }}
          docker push ${{ steps.build_image.outputs.DATE_IMAGE }}

  # Use this job for branch protection rules
  build-successful:
    name: Report Build Status
    runs-on: ubuntu-latest
    needs: [ discover, build ]
    if: always()
    steps:
      - name: Check build status
        if: ${{ contains(needs.*.result, 'failure') }}
        run: exit 1
